name: Python Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: python:slim

# It lets us cache pip-installed packages
    env:
      PIP_CACHE_DIR: ${{ github.workspace }}/.cache/pip
      #Make Firefox run headless
      MOZ_HEADLESS: "1"
      HOME: /root
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      # "setUp" phase, before the main build
      - name: Show python and pip versions # for debugging 
        run: |
          python --version
          pip --version
    
      - name: Create and activate venv
        run: |
          python -m pip install --upgrade pip
          pip install virtualenv
          python -m virtualenv .venv
      # Main build
      - name: unit tests 
        run: |
          pip install -r requirements.txt
          # unit tests
          python src/manage.py test lists accounts
        # (if those pass) all tests, incl. functional.
        
      - name: Install firefox && geckodriver
        run: |
          # download firefox && wget
          apt update -y && apt install -y firefox-esr wget
          # download geckodriver
          wget https://github.com/mozilla/geckodriver/releases/download/v0.36.0/geckodriver-v0.36.0-linux64.tar.gz
          # extract file
          tar -xvzf geckodriver*
          # make it executable
          chmod +x geckodriver
          # move so other tools can find it
          mv geckodriver /usr/local/bin/
          # for debug purposes
          firefox --version
          geckodriver --version
          
      - name: Install selenium && run FTs
        run: |
          pip install selenium
          cd src && python manage.py test

      - name: upload screendumps
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screendumps
          path: src/functional_tests/screendumps/
      
